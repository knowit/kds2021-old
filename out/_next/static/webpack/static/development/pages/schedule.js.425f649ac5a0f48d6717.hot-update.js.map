{"version":3,"file":"static/webpack/static\\development\\pages\\schedule.js.425f649ac5a0f48d6717.hot-update.js","sources":["webpack:///./pages/schedule.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Day, Filter, Layout } from \"../components\";\r\n\r\nimport { program as Program } from \"../models/data.json\";\r\n\r\nimport \"../styling/scheduleStyles.scss\";\r\n\r\nconst Schedule = () => {\r\n  const [filteredProgram, setFilteredProgram] = useState(\r\n    JSON.parse(JSON.stringify(Program))\r\n  );\r\n  const [showOnlyFavorites, setShowOnlyFavorites] = useState(false);\r\n  const [tags, setTags] = useState([]);\r\n  const [currentDayIndex, setCurrentDatIndex] = useState(0);\r\n\r\n  const getRooms = (day) => {\r\n    const roomDict = {};\r\n\r\n    const rooms = day.slots.reduce((acc, slot) => acc.concat(slot.rooms), []);\r\n    rooms.forEach((room) => {\r\n      if (room) {\r\n        roomDict[room.name] = true;\r\n      }\r\n    });\r\n    return Object.keys(roomDict);\r\n  };\r\n\r\n  useEffect(() => {\r\n    filterProgram();\r\n  }, [tags, showOnlyFavorites]);\r\n\r\n  const handleFilterChange = (newVal) => {\r\n    setTags(newVal);\r\n  };\r\n\r\n  const handleFavoriteChange = (newVal) => {\r\n    setShowOnlyFavorites(newVal);\r\n  };\r\n\r\n  // TODO - Test\r\n  const handleToggleTag = (tag) => {\r\n    filterProgram();\r\n\r\n    if (tags.indexOf(tag) > -1) {\r\n      setTags(tags.filter((t) => t != tag));\r\n    } else {\r\n      setTags(tags.concat(tag));\r\n    }\r\n  };\r\n\r\n  console.log(Program);\r\n\r\n  const filterProgram = () => {\r\n    let newProgram = JSON.parse(JSON.stringify(Program));\r\n\r\n    newProgram.days = newProgram.days.map((day) => {\r\n      return day.slots.map((slot) => {\r\n        return slot.rooms.map((room) => {\r\n          return room.talks.map((talk) => {\r\n            const tags = talk.tags.concat([talk.language]);\r\n\r\n            if (showOnlyFavorites && !localStorage.getItem(talk.talkId)) {\r\n              return false;\r\n            } else {\r\n              return !(\r\n                tags.length > 0 && !tags.some((tag) => tags.indexOf(tag) > -1)\r\n              );\r\n            }\r\n          });\r\n        });\r\n      });\r\n    });\r\n\r\n    const filterProgram = () => {\r\n      let newProgram = JSON.parse(JSON.stringify(Program));\r\n\r\n      // TODO - Manually filter rooms\r\n      newProgram.days = newProgram.days.map((day) => {\r\n        return day;\r\n      });\r\n\r\n      //alert(JSON.stringify(newProgram.days));\r\n\r\n      setFilteredProgram(newProgram);\r\n    };\r\n\r\n    const setDay = (index) => {\r\n      setCurrentDatIndex(index);\r\n    };\r\n\r\n    return (\r\n      <div className=\"schedule page\">\r\n        <Layout\r\n          title=\"Schedule\"\r\n          filter={\"small\"}\r\n          onTagChange={handleFilterChange}\r\n          onFavoriteChange={handleFavoriteChange}\r\n          showOnlyFavorites={showOnlyFavorites}\r\n          selectedTags={tags}\r\n          hideLogo={\"small\"}\r\n          background={true}\r\n        >\r\n          <div className=\"schedule-document negative-margin\">\r\n            <div className=\"day-selector-top\">\r\n              {filteredProgram.days.map((day, i) => (\r\n                <span key={day.day}>\r\n                  {i != 0 && <span> | </span>}\r\n                  <span\r\n                    onClick={() => setDay(i)}\r\n                    className={`header-day ${\r\n                      currentDayIndex == i ? \"selected\" : \"\"\r\n                    }`}\r\n                  >\r\n                    {day.day}\r\n                  </span>\r\n                </span>\r\n              ))}\r\n            </div>\r\n            <div className=\"schedule-container\">\r\n              <div className=\"header\">\r\n                <Filter\r\n                  onTagChange={handleFilterChange}\r\n                  onFavoriteChange={handleFavoriteChange}\r\n                  selectedTags={tags}\r\n                  showOnlyFavorites={showOnlyFavorites}\r\n                  className=\"hide-small schedule-filter\"\r\n                  type=\"dropdown\"\r\n                />\r\n\r\n                <div className=\"header-title\">\r\n                  <h1 className=\"title\">Schedule</h1>\r\n                  <div className=\"day-selector-header\">\r\n                    {filteredProgram.days.map((day, i) => (\r\n                      <span key={day.day}>\r\n                        {i != 0 && <span className=\"seperator\"> | </span>}\r\n                        <span\r\n                          onClick={() => setDay(i)}\r\n                          className={`header-day ${\r\n                            currentDayIndex == i ? \"selected\" : \"\"\r\n                          }`}\r\n                        >\r\n                          {day.day}\r\n                        </span>\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {filteredProgram.days.length > 0 && (\r\n                <Day\r\n                  onToggleTag={(val) => handleToggleTag(val)}\r\n                  tags={tags}\r\n                  currDay={filteredProgram.days[currentDayIndex]}\r\n                  slots={\r\n                    filteredProgram.days[currentDayIndex] &&\r\n                    filteredProgram.days[currentDayIndex].slots\r\n                  }\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Schedule;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAmBA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AACA;AACA;AACA;;;;A","sourceRoot":""}