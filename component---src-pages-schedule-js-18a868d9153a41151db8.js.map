{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/ExpandMore.js","webpack:///./node_modules/date-fns/esm/startOfDay/index.js","webpack:///./node_modules/date-fns/esm/isSameDay/index.js","webpack:///./src/components/ButtonGroup.js","webpack:///./src/components/Filters/Filters.jsx","webpack:///./src/components/Filters/index.js","webpack:///./src/components/ViewTypes.jsx","webpack:///./src/pages/schedule.js","webpack:///./node_modules/date-fns/esm/isToday/index.js","webpack:///./node_modules/@material-ui/icons/ViewWeek.js"],"names":["_interopRequireDefault","Object","defineProperty","exports","value","_react","_default","createElement","d","startOfDay","dirtyDate","requiredArgs","arguments","date","toDate","setHours","isSameDay","dirtyDateLeft","dirtyDateRight","dateLeftStartOfDay","dateRightStartOfDay","getTime","StyledButtonGroup","p","numberOfButtons","overflow","ButtonGroup","children","rest","filterTypes","label","type","StyledFilters","spacing","normal","mediaQueries","medium","large","filledFilter","typeColors","outlinedFilter","getStyle","isHover","isFocus","isActive","Filters","activeFilters","onChangeActiveFilters","map","filter","Button","key","onClick","appearance","css","includes","StyledViewTypes","ViewTypes","currentViewType","onChangeViewType","oppositeType","fontSize","colors","blue","blueDark","StyledContentChangers","isActiveStyle","StyledLinkContainer","StyledLink","small","blueDarkest","expandMoreStyle","xsmall","getActiveDay","viewmodel","days","find","day","Date","now","isToday","eventData","year","monthNumber","SchedulePage","location","StyledSafeLink","withComponent","SafeLink","useState","setActiveFilters","slots","setSlots","viewType","setViewType","activeDay","scheduleDay","hash","substring","FetchedSlots","FetchSlots","useEffect","currenSlots","slot","isColumn","Content","ContentSection","minHeight","backgroundColor","color","length","xlarge","to","withTopSeperator","withBottomSeperator","innerPadding","undefined","newFilter","updatedActiveFilters","Slots","activeFilter"],"mappings":"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","file":"component---src-pages-schedule-js-18a868d9153a41151db8.js","sourcesContent":["\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports[\"default\"] = _default;","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nconst StyledButtonGroup = styled.div`\n  display: grid;\n  grid-template-columns: ${p =>\n    `repeat(${p.numberOfButtons}, auto [col-start])`};\n  grid-column-gap: 10px;\n  ${p => (p.overflow ? `overflow: ${p.overflow}` : '')};\n`;\n\nconst ButtonGroup = ({ children, ...rest }) => {\n  return <StyledButtonGroup {...rest}>{children}</StyledButtonGroup>;\n};\n\nButtonGroup.propTypes = {\n  css: PropTypes.string,\n  numberOfButtons: PropTypes.number.isRequired,\n};\n\nexport default ButtonGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { typeColors } from '../Slot/SlotStyles';\nimport Button from '../Button';\nimport css from '@emotion/css';\nimport spacing from '../../util/spacing';\nimport mediaQueries from '../../util/mediaQueries';\n\nexport const filterTypes = [\n  { label: 'Felles', type: 'other' },\n  { label: 'Lyntale', type: 'lightningTalk' },\n  { label: 'Foredrag', type: 'talk' },\n  { label: 'Workshop', type: 'workshop' },\n];\n\nconst StyledFilters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  width: 70%;\n  justify-content: flex-start;\n  grid-column-gap: ${spacing.normal};\n  @media (${mediaQueries.medium}) {\n    width: 100%;\n    margin-top: ${spacing.large};\n  }\n`;\n\nconst filledFilter = type => css`\n  color: white;\n  background-color: ${typeColors[type]};\n`;\n\nconst outlinedFilter = type => css`\n  color: black;\n  background-color: inherit;\n`;\n\nconst getStyle = (isHover, isFocus, isActive, type) => {\n  if (isHover) {\n    return isActive ? outlinedFilter(type) : filledFilter(type);\n  } else if (isFocus) {\n    return isActive ? filledFilter(type) : outlinedFilter(type);\n  }\n  return isActive ? filledFilter(type) : outlinedFilter(type);\n};\n\nconst filterButtonStyle = (type = 'other', isActive = false) => css`\n  &,\n  &:hover,\n  &:focus {\n    border: 2px solid ${typeColors[type]};\n    font-weight: 700;\n    border-radius: 5px;\n    display: flex;\n    justify-content: center;\n    line-height: 1.8rem;\n    width: 25%;\n    margin-right: 1rem;\n    margin-top: 1rem;\n    @media (${mediaQueries.medium}) {\n      width: 35%;\n    }\n  }\n\n  & {\n    ${getStyle(false, false, isActive, type)};\n  }\n\n  &:focus {\n    ${getStyle(false, true, isActive, type)};\n  }\n\n  &:hover {\n    ${getStyle(true, false, isActive, type)};\n  }\n`;\n\nconst Filters = ({ activeFilters, onChangeActiveFilters }) => {\n  return (\n    <StyledFilters>\n      {filterTypes.map(filter => (\n        <Button\n          key={filter.type}\n          onClick={() => onChangeActiveFilters(filter.type)}\n          appearance=\"stripped\"\n          css={filterButtonStyle(\n            filter.type,\n            activeFilters.includes(filter.type),\n          )}>\n          {filter.label}\n        </Button>\n      ))}\n    </StyledFilters>\n  );\n};\n\nFilters.propTypes = {\n  activeFilters: PropTypes.arrayOf(PropTypes.string),\n  onChangeActiveFilters: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import Filters from './Filters';\n\nexport default Filters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport ViewWeek from '@material-ui/icons/ViewWeek';\nimport Button from './Button';\nimport css from '@emotion/css';\nimport mediaQueries from '../util/mediaQueries';\nimport colors from '../util/colors';\n\nconst StyledViewTypes = styled.div`\n  display: flex;\n  justify-content: center;\n  @media (${mediaQueries.medium}) {\n    display: none;\n  }\n`;\n\nconst ViewTypes = ({ currentViewType, onChangeViewType }) => {\n  const oppositeType = currentViewType === 'row' ? 'column' : 'row';\n  return (\n    <StyledViewTypes>\n      <Button\n        appearance=\"stripped\"\n        css={css`\n          &,\n          &:hover,\n          &:focus {\n            display: flex;\n            align-items: center;\n          }\n        `}\n        onClick={() => onChangeViewType(oppositeType)}>\n        <span>Bytt vising: </span>\n        <ViewWeek\n          fontSize=\"large\"\n          css={css`\n            color: ${colors.blue};\n            transform: rotate(${currentViewType === 'row' ? 90 : 0}deg);\n            transition: transform 0.2s linear;\n            &:hover {\n              color: ${colors.blueDark};\n            }\n          `}\n        />\n      </Button>\n    </StyledViewTypes>\n  );\n};\n\nViewTypes.propTypes = {\n  currentViewType: PropTypes.string.isRequired,\n  onChangeViewType: PropTypes.func.isRequired,\n};\n\nexport default ViewTypes;\n","import React, { useEffect, useState } from 'react';\nimport { css } from '@emotion/core';\nimport styled from '@emotion/styled';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { isToday } from 'date-fns';\nimport ButtonGroup from '../components/ButtonGroup';\nimport Content from '../components/Content';\nimport ContentSection from '../components/ContentSection';\nimport Filters from '../components/Filters';\nimport SafeLink from '../components/SafeLink';\nimport Slots from '../components/Slot/Slots';\nimport viewmodel, { eventData } from '../json';\nimport DefaultLayout from '../layouts';\nimport colors from '../util/colors';\nimport mediaQueries from '../util/mediaQueries';\nimport spacing from '../util/spacing';\nimport { FetchSlots } from '../graphql/airtable';\nimport { filterTypes } from '../components/Filters/Filters';\nimport ViewTypes from '../components/ViewTypes';\n\nconst buttonGroupStyle = numberOfButtons => css`\n  margin: ${spacing.large} auto;\n  margin-bottom: 0;\n  grid-template-columns: 100%;\n  grid-template-rows: ${spacing.xlarge};\n  grid-template-columns: 50% 50%;\n  width: 50%;\n  grid-template-rows: auto;\n\n  @media (${mediaQueries.medium}) {\n    grid-row-gap: 10px;\n    width: 100%;\n    grid-template-rows: auto auto;\n    grid-template-columns: 50% 50%;\n    margin-bottom: ${spacing.normal};\n  }\n`;\n\nconst StyledContentChangers = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst isActiveStyle = css`\n  color: white;\n  background-color: ${colors.blue};\n  border-color: ${colors.blue};\n`;\n\nconst StyledLinkContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media (${mediaQueries.medium}) {\n    display: grid;\n    grid-template-columns: 90% 10%;\n    grid-template-rows: auto;\n    grid-template-areas: 'button arrow';\n  }\n`;\n\nconst StyledLink = styled.a`\n  padding: ${spacing.small} ${spacing.normal};\n  background-color: ${colors.blueDarkest};\n  text-decoration: none;\n  color: white;\n  border: 1px solid ${colors.blueDarkest};\n  border-radius: 50px;\n  text-align: center;\n  display: ${p => p.isActive && isActiveStyle};\n  &:hover,\n  &:focus {\n    ${isActiveStyle};\n  }\n  @media (${mediaQueries.medium}) {\n    grid-area: button;\n  }\n`;\n\nconst expandMoreStyle = css`\n  margin-top: ${spacing.xsmall};\n  color: ${colors.blue};\n  visibility: visible;\n  align-self: center;\n  @media (${mediaQueries.medium}) {\n    grid-area: arrow;\n    visibility: hidden;\n  }\n`;\n\nexport const getActiveDay = () => {\n  const todayDate = viewmodel.days.find(day =>\n    isToday(new Date(eventData.year, eventData.monthNumber - 1, day.date)),\n  );\n  return todayDate || viewmodel.days[0];\n};\n\nconst SchedulePage = ({ location }) => {\n  const StyledSafeLink = StyledLink.withComponent(SafeLink);\n\n  const [activeFilters, setActiveFilters] = useState(\n    filterTypes.map(filter => filter.type),\n  );\n  const [slots, setSlots] = useState([]);\n  const [viewType, setViewType] = useState('column');\n\n  const dayInUrl = viewmodel.days.find(\n    scheduleDay => scheduleDay.date === location.hash.substring(1),\n  );\n  const activeDay = dayInUrl || getActiveDay();\n\n  const FetchedSlots = FetchSlots();\n\n  useEffect(() => {\n    setActiveFilters(filterTypes.map(filter => filter.type));\n    setSlots(FetchedSlots);\n  }, []);\n\n  useEffect(() => {\n    setActiveFilters(filterTypes.map(filter => filter.type));\n  }, [location]);\n\n  const currenSlots = slots\n    .filter(slot => slot.date === activeDay.date)\n    .filter(slot => activeFilters.includes(slot.type || 'other'));\n  if (!activeDay || !activeDay.date) {\n    return <span>Her skjedde noe feil gitt...</span>;\n  }\n  const onChangeActiveFilters = newFilter => {\n    const updatedActiveFilters = activeFilters.includes(newFilter)\n      ? activeFilters.filter(filter => filter !== newFilter)\n      : [...activeFilters, newFilter];\n    setActiveFilters(updatedActiveFilters);\n  };\n\n  const isColumn = viewType === 'column';\n  return (\n    <DefaultLayout>\n      <Content>\n        <ContentSection\n          minHeight=\"5vh\"\n          backgroundColor={colors.blueDark}\n          color=\"white\">\n          <ButtonGroup\n            css={buttonGroupStyle(viewmodel.days.length)}\n            numberOfButtons={viewmodel.days.length}>\n            {viewmodel.days.map(day => (\n              <StyledLinkContainer key={day.label}>\n                <StyledSafeLink\n                  isActive={activeDay.date === day.date}\n                  to={`/schedule#${day.date}`}>\n                  {day.label}\n                </StyledSafeLink>\n                {activeDay.date === day.date && (\n                  <ExpandMore css={expandMoreStyle} fontSize=\"large\" />\n                )}\n              </StyledLinkContainer>\n            ))}\n          </ButtonGroup>\n        </ContentSection>\n        <ContentSection\n          minHeight=\"95vh\"\n          withTopSeperator\n          withBottomSeperator\n          innerPadding={isColumn ? '5%' : undefined}>\n          <StyledContentChangers>\n            <Filters\n              activeFilters={activeFilters}\n              onChangeActiveFilters={onChangeActiveFilters}\n            />\n            <ViewTypes\n              currentViewType={viewType}\n              onChangeViewType={setViewType}\n            />\n          </StyledContentChangers>\n          <Slots\n            activeFilter={activeFilters}\n            slots={currenSlots}\n            viewType={viewType}\n            activeDay={activeDay}\n          />\n        </ContentSection>\n      </Content>\n    </DefaultLayout>\n  );\n};\n\nexport default SchedulePage;\n","import \"core-js/modules/es6.date.now\";\nimport isSameDay from '../isSameDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nexport default function isToday(dirtyDate) {\n  requiredArgs(1, arguments);\n  return isSameDay(dirtyDate, Date.now());\n}","\"use strict\";\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon[\"default\"])(_react[\"default\"].createElement(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ViewWeek');\n\nexports[\"default\"] = _default;"],"sourceRoot":""}